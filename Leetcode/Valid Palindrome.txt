class Solution {
public:
    bool isPalindrome(string s)
    {
     int n=s.size();
     if(n==0)return true;
     int i=0,j=n-1;
 
     while(i<j)
     {
        while(i<j && bl(s[i])==false) i++;
        
        while(i<j && bl(s[j])==false )j--;
        
        if(low(s[i])!= low(s[j]) )return false;
         
         i++;
         j--;
    }
        return true;
        
    }
    
    bool bl(char c)
    {
        if((c>='a' && c<='z') || (c>='A' && c<='Z')|| (c>='0' && c<='9'))
            return true;
        else 
            return false;
    }
        
    char low(char x)
    {
        char l=x;
        if (x>='A' && x<='Z')
        {
            int p=x;
            l=((char)(p+32));
        }
        return l;
    }
        
        
        
};
/*

class Solution {
public:
    bool isPalindrome(string s)
    {

     int i=0,j=s.size()-1;
 
     while(i<j)
     {
        while(i<j && !isalnum(s[i])) i++;
        
        while(i<j && !isalnum(s[j]))j--;
        
        if(tolower(s[i++])!= tolower(s[j--]) )return false;

     }
    return true;
}
};

*/